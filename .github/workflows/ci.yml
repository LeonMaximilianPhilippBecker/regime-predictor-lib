name: Python CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v4
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root

    - name: Install Project (if your lib is installable)
      run: poetry install --no-interaction

    - name: Lint with Flake8
      run: |
        poetry run flake8 regime_predictor_lib/ tests/

    - name: Format with Black
      run: |
        poetry run black --check regime_predictor_lib/ tests/

    - name: Sort imports with isort
      run: |
        poetry run isort --check-only regime_predictor_lib/ tests/

    - name: Type check with MyPy
      run: |
        poetry run mypy regime_predictor_lib/

    - name: Run tests with Pytest
      run: |
        poetry run pytest
