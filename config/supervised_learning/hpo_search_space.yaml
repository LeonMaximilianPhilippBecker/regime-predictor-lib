
xgboost:
  n_estimators:
    type: int
    params: {low: 100, high: 1000, step: 50}
  learning_rate:
    type: float
    params: {low: 0.01, high: 0.2, log: true}
  max_depth:
    type: int
    params: {low: 3, high: 10}
  min_child_weight:
    type: int
    params: {low: 1, high: 20}
  subsample:
    type: float
    params: {low: 0.6, high: 1.0}
  colsample_bytree:
    type: float
    params: {low: 0.6, high: 1.0}
  gamma:
    type: float
    params: {low: 0.0, high: 5.0}
  reg_alpha:
    type: float
    params: {low: 1e-8, high: 1.0, log: true}
  reg_lambda:
    type: float
    params: {low: 1e-8, high: 1.0, log: true}


lightgbm_dart:
  n_estimators:
    type: int
    params: { low: 100, high: 2000, step: 100 }
  learning_rate:
    type: float
    params: { low: 0.01, high: 0.1, log: true }
  num_leaves:
    type: int
    params: { low: 10, high: 60 }
  max_depth:
    type: int
    params: { low: 3, high: 12 }
  min_child_samples:
    type: int
    params: { low: 5, high: 100 }
  subsample:
    type: float
    params: { low: 0.6, high: 1.0 }
  colsample_bytree:
    type: float
    params: { low: 0.6, high: 1.0 }
  reg_alpha:
    type: float
    params: { low: 1e-8, high: 10.0, log: true }
  reg_lambda:
    type: float
    params: { low: 1e-8, high: 10.0, log: true }
  drop_rate:
    type: float
    params: { low: 0.0, high: 0.4 }
  skip_drop:
    type: float
    params: { low: 0.1, high: 0.9 }

catboost:
  iterations:
    type: int
    params: {low: 200, high: 1500, step: 100}
  learning_rate:
    type: float
    params: {low: 0.01, high: 0.2, log: true}
  depth:
    type: int
    params: {low: 3, high: 10}
  l2_leaf_reg:
    type: float
    params: {low: 1.0, high: 10.0, log: true}
  bootstrap_type:
    type: categorical
    params: {choices: ['Bernoulli', 'MVS']}
  subsample:
    type: float
    params: {low: 0.5, high: 1.0}
  random_strength:
    type: float
    params: {low: 1e-8, high: 10.0, log: true}
  border_count:
    type: int
    params: {low: 32, high: 255}
